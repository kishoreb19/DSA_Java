/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    void solve(TreeNode root, String ans, int sum[]){
        if(root==null) return;
        if(root.left==null && root.right==null){
            ans = ans + Integer.toString(root.val);
            sum[0] += Integer.parseInt(ans);
            return;
        }

        ans = ans + Integer.toString(root.val);
        solve(root.left,ans,sum);
        solve(root.right,ans,sum);
    }
    public int sumNumbers(TreeNode root) {
        if(root==null) return 0;
        int sum[] = {0};
        solve(root,"",sum);
        return sum[0];
    }
}

https://leetcode.com/problems/sum-root-to-leaf-numbers/description/