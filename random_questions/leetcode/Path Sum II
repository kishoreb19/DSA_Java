import java.util.*;

class Solution {


    void solve(TreeNode root, int target, List<Integer> path,List<List<Integer>> result) {
        if (root == null) return;

        path.add(root.val);

        if (root.left == null && root.right == null && target == root.val) {
            result.add(new ArrayList<>(path));
        }


        solve(root.left, target - root.val, path, result);
        solve(root.right, target - root.val, path, result);

        path.remove(path.size() - 1);
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        solve(root, targetSum, new ArrayList<>(),result);
        return result;
    }
}
https://leetcode.com/problems/path-sum-ii/